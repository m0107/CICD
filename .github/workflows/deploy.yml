name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main  # Trigger this workflow on push to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: "public"
        env:
          AWS_REGION: us-east-1  # Specify your AWS region
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Check ECR Login Output
        run: |
            echo "ECR Registry: ${{ steps.login-ecr.outputs.registry }}"
      
      - name: Build, tag, and push Docker image to ECR
        run: |
            # Construct the IMAGE_TAG without leading slashes or invalid characters
            IMAGE_TAG="${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_REPOSITORY_NAME }}:${GITHUB_SHA}"
            
            # Log the tag for debugging
            echo "log Building Docker image with steps.login-ecr.outputs.registry:  ${{ steps.login-ecr.outputs.registry }}"
        

            # Log the tag for debugging
            echo "log Building Docker image with secrets.AWS_ECR_REPOSITORY_NAME:  ${{ secrets.AWS_ECR_REPOSITORY_NAME }}"


            # Log the tag for debugging
            echo "log Building Docker image with tag: $IMAGE_TAG"
        
            # Build the Docker image
            docker build -t "$IMAGE_TAG" .

            #name: Check for Dockerfile
            if [ ! -f Dockerfile ]; then
              echo "Dockerfile not found!"
              exit 1
            fi
        
            # Push the Docker image to ECR
            docker push "$IMAGE_TAG"        
      
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1  # Set your AWS region here m
